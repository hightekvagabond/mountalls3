#!/usr/bin/bash

# =============================================================================
# MountAllS3 Bucket Groups Setup
# =============================================================================

# Load common functions
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/common.sh" || {
    echo "❌ Error: Could not load common.sh library"
    exit 1
}

configure_bucket_groups() {
    local specified_groups="$1"
    
    print_header "Bucket Group Creation"
    
    local group_names=()
    
    if [[ -n "$specified_groups" ]]; then
        # Non-interactive mode: parse comma-separated groups
        IFS=',' read -ra group_names <<< "$specified_groups"
        print_info "Creating specified groups: ${group_names[*]}"
        
        # Validate all group names
        for group in "${group_names[@]}"; do
            if ! validate_group_name "$group"; then
                print_error "Invalid group name: $group"
                return 1
            fi
        done
    else
        # Interactive mode
        echo "Bucket groups help organize your S3 buckets into logical collections."
        echo "Examples: 'user-folders', 'project1-buckets', 'infra-buckets', 'websites'"
        echo ""
        
        echo "Enter the names of bucket groups you want to create (one per line)."
        echo "Press Enter on an empty line when done:"
        echo ""
        
        while true; do
            local group_name
            group_name=$(prompt_user "Group name" "")
            if [[ -z "$group_name" ]]; then
                break
            fi
            
            # Validate group name
            if validate_group_name "$group_name"; then
                group_names+=("$group_name")
                echo "  ✓ Added group: $group_name"
            fi
        done
    fi
    
    if [[ ${#group_names[@]} -eq 0 ]]; then
        print_error "No groups created. Creating default 'main' group."
        group_names=("main")
    fi
    
    # Create basic config with groups
    ensure_config_dir
    create_groups_config "${group_names[@]}"
    
    print_success "Created ${#group_names[@]} bucket groups"
    print_info "Next: Assign buckets to groups or configure AWS profiles"
}

create_groups_config() {
    local groups=("$@")
    local default_mount
    default_mount=$(get_default_mount_base)
    default_mount="${default_mount/#\~/$HOME}"
    
    cat > "$CONFIG_FILE" << EOF
# MountAllS3 Configuration
# Generated by interactive setup on $(date)

# Default settings
defaults:
  mount_groups: ["${groups[0]}"]
  mount_base: "$default_mount"
  aws_profile: "all"

# Bucket groups
groups:
EOF

            for group in "${groups[@]}"; do
        local desc="S3 buckets for $group"
        
        cat >> "$CONFIG_FILE" << EOF
  $group:
    description: "$desc"
    buckets: []

EOF
    done
    
    print_success "Configuration file created with ${#groups[@]} groups"
}

assign_buckets_to_groups() {
    print_header "Bucket Assignment"
    
    if ! config_file_exists; then
        print_error "No configuration file found. Please create groups first."
        return 1
    fi
    
    # Get available groups
    local groups
    mapfile -t groups < <(get_config_groups)
    
    if [[ ${#groups[@]} -eq 0 ]]; then
        print_error "No groups found in configuration"
        return 1
    fi
    
    # Get AWS profiles
    local profiles
    mapfile -t profiles < <(get_aws_profiles)
    
    if [[ ${#profiles[@]} -eq 0 ]]; then
        print_error "No AWS profiles found"
        return 1
    fi
    
    print_info "Found ${#groups[@]} groups and ${#profiles[@]} AWS profiles"
    print_warning "Bucket assignment is simplified in this version"
    echo ""
    echo "Available groups:"
    for group in "${groups[@]}"; do
        echo "  • $group"
    done
    echo ""
    echo "Available profiles:"
    for profile in "${profiles[@]}"; do
        echo "  • $profile"
    done
    echo ""
    print_info "For now, manually edit your config file to assign specific buckets"
    print_info "Full bucket assignment wizard coming in next update!"
}

list_buckets_for_profiles() {
    print_header "AWS Profile Bucket Listing"
    
    local profiles
    mapfile -t profiles < <(get_aws_profiles)
    
    if [[ ${#profiles[@]} -eq 0 ]]; then
        print_error "No AWS profiles found"
        return 1
    fi
    
    for profile in "${profiles[@]}"; do
        echo ""
        print_step "Buckets for profile: $profile"
        
        local buckets
        mapfile -t buckets < <(get_buckets_for_profile "$profile" 2>/dev/null)
        
        if [[ ${#buckets[@]} -gt 0 ]]; then
            for bucket in "${buckets[@]}"; do
                echo "  • $bucket"
            done
        else
            print_warning "No accessible buckets found for profile '$profile'"
        fi
    done
}

interactive_setup() {
    print_header "Bucket Groups Interactive Setup"
    
    if ! command -v aws >/dev/null 2>&1; then
        print_error "AWS CLI not found. Please install it first:"
        echo "  Ubuntu/Debian: sudo apt-get install awscli"
        echo "  macOS: brew install awscli"
        echo "  Or use pip: pip install awscli"
        return 1
    fi
    
    echo "This will help you create logical groups for your S3 buckets."
    echo ""
    
    # Step 1: Create groups
    configure_bucket_groups
    
    # Step 2: Optional bucket assignment
    echo ""
    if prompt_yes_no "Would you like to see available buckets for assignment?" "y"; then
        list_buckets_for_profiles
        echo ""
        print_info "To assign buckets to groups, edit your config file or wait for the"
        print_info "full assignment wizard in the next update."
    fi
    
    print_success "Group setup completed!"
}

show_usage() {
    echo "MountAllS3 Bucket Groups Setup"
    echo ""
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "GROUP MANAGEMENT:"
    echo "  --groups [GROUP1,GROUP2]   Configure bucket groups (interactive if no groups)"
    echo "  --assign-buckets           Assign buckets to groups (basic)"
    echo "  --list-buckets             List buckets for profiles"
    echo "  --interactive              Run interactive group setup"
    echo ""
    echo "HELP:"
    echo "  --help, -h                 Show this help message"
    echo ""
    echo "EXAMPLES:"
    echo "  $0 --groups user-folders,websites,infra    # Create groups non-interactively"
    echo "  $0 --groups                                # Create groups interactively"
    echo "  $0 --list-buckets                          # List all available buckets"
}

main() {
    case "${1:-}" in
        --help|-h)
            show_usage
            ;;
        --groups)
            shift
            configure_bucket_groups "$1"
            ;;
        --assign-buckets)
            assign_buckets_to_groups
            ;;
        --list-buckets)
            list_buckets_for_profiles
            ;;
        --interactive)
            interactive_setup
            ;;
        "")
            interactive_setup
            ;;
        *)
            print_error "Unknown option: $1"
            show_usage
            exit 1
            ;;
    esac
}

main "$@"